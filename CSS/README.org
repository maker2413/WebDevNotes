#+TITLE: CSS

CSS or Cascading Style Sheets is used to describe how your HTML content should
be presented. The term cascading is used to note how the inheritance of
attributes is determined in CSS. By that I mean that if any parent attribute has
any CSS applied to it child attributes will automatically inherit them.

* Examples:
  - 1. :: [[./Essentials/index.html][Essentials of CSS]]
  - 2. :: [[./Intermediate/index.html][Intermediate CSS]]
  - 3. :: [[./Typography/index.html][Typography]]
  - 4. :: [[./Backgrounds/index.html][Backgrounds]]

* CSS Properties
  CSS has too many properties to list here. I'm only going to document the
  common ones and the super useful ones:
  - ~background-color~: Controls the background color
    - Can be set a color by name, by hexadecimal, or by ~rgba~, which will allow
      us to set the opacity as well as the color
  - ~border~: Controls the border around a box
  - ~border-spacing~: Controls the spacing between borders
  - ~border-collapse~: Sets whether cells inside a table have shared or separate
    borders
  - ~border-radius~: Rounds the corners of an element's outer border edge
  - ~box-sizing~: Controls the total height and width of a box keeping in mind
    the margin, border, and padding
    - https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing
  - ~clear~: Controls whether an element must be moved below (cleared) floating
    elements
    - Over the years other methods have popped up to accomplish this at the
      parent level and have been dubbed "clearfix"
    - clearfix in its self has a storied history that can be read about here:
      https://css-tricks.com/clearfix-a-lesson-in-web-development-evolution/
  - ~color~: Controls the color of an item
    - Can be set a color by name, by hexadecimal, or by ~rgba~, which will allow
      us to set the opacity as well as the color
  - ~display~: Controls whether an element is treated as a block or inline box
  - ~float~: Makes a box float above surrounding items
    - If all items in a parent attribute are floating the parent attribute will
      act as if it contains no items
    - To force the parent attribute to consider floated elements refer to
      ~clear~
  - ~font-family~: Specifies a prioritized list of one or more font family names
    to be used
  - ~font-size~: Controls the font size
  - ~font-style~: Controls the style of a font like normal, italic, or oblique
  - ~font-weigth~: Set the weight (boldness) of a font
  - ~height~: Controls the height of a box
  - ~letter-spacing~: Sets the spacing between letters
  - ~line-height~: Sets the height of lines of text
  - ~list-style~: Controls the style of bullet points in a list
  - ~margin~: Controls the spacing around the outside of a box
    - Margin can be set manually on all 4 directions (left, right, top, bottom)
      or all 4 directions can be set in one line. If this is done the directions
      are defined clockwise (top, right, bottom, left):
      ~margin: 20px 40px 20px 40px;~  - ~max-width~: Controls the maximum allowed width
  - ~max-height~: Controls the maximum allowed height
  - ~outline~: Controls outline properties
  - ~overflow~: Set the desired behavior when content does not fit in the
    element's padding box
  - ~padding~: Controls the spacing between the content and the border of a box
    - Padding can be set manually on all 4 directions (left, right, top, bottom)
      or all 4 directions can be set in one line. If this is done the directions
      are defined clockwise (top, right, bottom, left):
      ~padding: 20px 40px 20px 40px;~
  - ~position~: Controls how an element is positioned in a document
    - ~top~: Controls the vertical position of a positioned element
    - ~right~: Controls the horizontal position of a positioned element
    - ~left~: Controls the horizontal position of a positioned element
    - ~bottom~: Controls the vertical position of a positioned element
    - Position absolute will search up the document to find the first parent
      element with ~position: relative~ and use that element as its frame of
      reference for positioning. If no relative parent found it will base it's
      positioning off of the page itself.
    - Position relative will base its position off of itself within the current
      document.
  - ~text-align~: Controls the alignment of text
    - ~vertical-align~: Controls the vertical alignment of text
  - ~text-decoration~: Controls the style of underline on an item
  - ~text-indent~: Sets the length of empty space (indentation) that is put
    before lines of text in a block
  - ~text-shadow~: Adds shadows to text.
    - It accepts the following inputs: ~offset-x offset-y blur-radius color~
  - ~text-transform~: Controls how to capitalize an element's text
    - Can be used to force uppercase or lowercase
  - ~visibility~: Shows or hides and element without changing the layout
  - ~width~: Controls the width of a box
  - ~word-spacing~: Sets the spacing between words
  - ~z-index~: Sets the z-order of a positioned element (larger z-index will
    override any item with a small z-index)

* Tips:
  Box Model: https://www.w3schools.com/css/css_boxmodel.asp

  Targeting the =nth= child of an element:
  https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-child

  Targeting specific attributes:
  https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors

  Form elements do not inherit font family settings from parent attributes.

  Custom fonts can be added to your website with ~@font-face~:
  https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face
